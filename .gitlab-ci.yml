image: node:10-alpine
stages:
  - build
  - integration
  - test
  - review
  - deploy

build-lib:
  stage: build
  script:
    - npm ci
    - npm run build:lib
  artifacts:
    expire_in: 1 week
    paths:
      - dist/@w11k/angular-sticky-things
  tags:
    - docker
    - linux

build-demo-master:
  stage: integration
  script:
    - npm ci
    - npm run build -- --base-href "/angular-sticky-things/"
  artifacts:
    expire_in: 1 week
    paths:
      - dist/angular-sticky-things-demo
  only:
    - master
  tags:
    - docker
    - linux


build-demo-review:
  stage: integration
  script:
    - npm ci
    - npm run build  -- --base-href /angular-sticky-things/review/$CI_COMMIT_REF_NAME/index.html
  artifacts:
    expire_in: 1 week
    paths:
      - dist/angular-sticky-things-demo
  only:
    - develop
  tags:
    - docker
    - linux


test-lib:
  image: trion/ng-cli-karma
  stage: test
  script:
    - npm ci
    - npm run test:lib
  tags:
    - docker
    - linux

#test-demo:
#  image: trion/ng-cli-karma
#  stage: test
#  script:
#  - npm run test

test-demo:
  image: trion/ng-cli-karma
  stage: test
  script:
    - npm ci
    - npm run e2e
  tags:
    - docker
    - linux


#publish-review:
#  stage: review
#  before_script:
#    - npm install npx -g
#    - apk update && apk add git
#  script:
#    - git config --global user.email "deploy@w11k.de"
#    - git config --global user.name "W11K Deploy"
#    - npx gh-pages -e review/$CI_COMMIT_REF_NAME -d dist/angular-sticky-things-demo --repo https://$GITHUB_TOKEN@github.com/w11k/angular-sticky-things
#  environment:
#    name: review/$CI_COMMIT_REF_NAME
#    url: https://w11k.github.io/angular-sticky-things/review/$CI_COMMIT_REF_NAME
#  only:
#    - branches
#  except:
#    - master
#  tags:
#    - docker
#    - linux

#publish-master:
#  stage: review
#  before_script:
#    - npm install npx -g
#    - apk update && apk add git
#  script:
#    - git config --global user.email "deploy@w11k.de"
#    - git config --global user.name "W11K Deploy"
#    - npx gh-pages -d dist/angular-sticky-things-demo --remote https://$GITHUB_TOKEN@github.com/w11k/angular-sticky-things --add
#  environment:
#    name: production
#    url: https://w11k.github.io/angular-sticky-things/
#  only:
#    - master
#  tags:
#    - docker
#    - linux

#publish-dev:
#  stage: deploy
#  only:
#    - tags
#  before_script:
#    - apk update && apk add git
#    - export COMMIT_TIME=$(git show -s --format=%ct $CI_COMMIT_SHA)
#    - export PACKAGE_VERSION=$(grep '"version"' package.json | cut -d '"' -f 4)
#    - export DEV_VERSION="$PACKAGE_VERSION-dev-$COMMIT_TIME"
#  script:
#    - npm version DEV_VERSION
#    - cd dist/@w11k/angular-sticky-things
#    - cp ../../../README.md .
#    - cp ../../../LICENSE .
#    - echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}'>.npmrc
#    - npm publish --access=public --tag next
#  tags:
#    - docker
#    - linux

publish:
  stage: deploy
  only:
    - tags
  script:
    - rm -rf node_modules
    - rm -rf dist
    - npm ci
    - npm run build:lib
    - cd dist/@w11k/angular-sticky-things
    - cp ../../../README.md .
    - cp ../../../LICENSE .
    - echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}'>.npmrc
    - npm publish --access=public
  tags:
    - docker
    - linux
